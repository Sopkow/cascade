{"ast":null,"code":"var _jsxFileName = \"/home/bran/Documents/cascade/src/WordColumn.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useDrop } from 'react-dnd';\nimport WordCard from './WordCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WordColumn = _ref => {\n  _s();\n  let {\n    words,\n    onDrop,\n    onDragEnd\n  } = _ref;\n  const [{\n    canDrop,\n    isOver\n  }, drop] = useDrop(() => ({\n    accept: 'WORD',\n    drop: () => ({\n      name: 'WordColumn'\n    }),\n    collect: monitor => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop()\n    })\n  }));\n  const isActive = canDrop && isOver;\n  const backgroundColor = isActive ? 'lightgreen' : 'white';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: drop,\n    children: words.map((word, index) => /*#__PURE__*/_jsxDEV(WordCard, {\n      word: word.word,\n      isFrench: word.isFrench,\n      onDragEnd: onDragEnd\n    }, word.word, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 7\n  }, this);\n};\n_s(WordColumn, \"F504N0wuFSbvI1XEbEwXUidFCiM=\", false, function () {\n  return [useDrop];\n});\n_c = WordColumn;\nexport default WordColumn;\nvar _c;\n$RefreshReg$(_c, \"WordColumn\");","map":{"version":3,"names":["React","useDrop","WordCard","jsxDEV","_jsxDEV","WordColumn","_ref","_s","words","onDrop","onDragEnd","canDrop","isOver","drop","accept","name","collect","monitor","isActive","backgroundColor","ref","children","map","word","index","isFrench","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/bran/Documents/cascade/src/WordColumn.js"],"sourcesContent":["import React from 'react';\nimport { useDrop } from 'react-dnd';\nimport WordCard from './WordCard';\n\nconst WordColumn = ({ words, onDrop, onDragEnd }) => {\n    const [{ canDrop, isOver }, drop] = useDrop(() => ({\n      accept: 'WORD',\n      drop: () => ({ name: 'WordColumn' }),\n      collect: (monitor) => ({\n        isOver: monitor.isOver(),\n        canDrop: monitor.canDrop(),\n      }),\n    }));\n  \n    const isActive = canDrop && isOver;\n    const backgroundColor = isActive ? 'lightgreen' : 'white';\n  \n    return (\n      <div ref={drop} >\n        {words.map((word, index) => (\n          <WordCard key={word.word} word={word.word} isFrench={word.isFrench} onDragEnd={onDragEnd} />\n        ))}\n      </div>\n    );\n  };\n  \n\nexport default WordColumn;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,WAAW;AACnC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,UAAU,GAAGC,IAAA,IAAkC;EAAAC,EAAA;EAAA,IAAjC;IAAEC,KAAK;IAAEC,MAAM;IAAEC;EAAU,CAAC,GAAAJ,IAAA;EAC5C,MAAM,CAAC;IAAEK,OAAO;IAAEC;EAAO,CAAC,EAAEC,IAAI,CAAC,GAAGZ,OAAO,CAAC,OAAO;IACjDa,MAAM,EAAE,MAAM;IACdD,IAAI,EAAEA,CAAA,MAAO;MAAEE,IAAI,EAAE;IAAa,CAAC,CAAC;IACpCC,OAAO,EAAGC,OAAO,KAAM;MACrBL,MAAM,EAAEK,OAAO,CAACL,MAAM,EAAE;MACxBD,OAAO,EAAEM,OAAO,CAACN,OAAO;IAC1B,CAAC;EACH,CAAC,CAAC,CAAC;EAEH,MAAMO,QAAQ,GAAGP,OAAO,IAAIC,MAAM;EAClC,MAAMO,eAAe,GAAGD,QAAQ,GAAG,YAAY,GAAG,OAAO;EAEzD,oBACEd,OAAA;IAAKgB,GAAG,EAAEP,IAAK;IAAAQ,QAAA,EACZb,KAAK,CAACc,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrBpB,OAAA,CAACF,QAAQ;MAAiBqB,IAAI,EAAEA,IAAI,CAACA,IAAK;MAACE,QAAQ,EAAEF,IAAI,CAACE,QAAS;MAACf,SAAS,EAAEA;IAAU,GAA1Ea,IAAI,CAACA,IAAI;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACzB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV,CAAC;AAACtB,EAAA,CApBEF,UAAU;EAAA,QACwBJ,OAAO;AAAA;AAAA6B,EAAA,GADzCzB,UAAU;AAuBhB,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}