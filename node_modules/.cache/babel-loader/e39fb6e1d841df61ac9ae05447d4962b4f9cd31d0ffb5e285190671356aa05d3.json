{"ast":null,"code":"var _jsxFileName = \"/home/bran/Documents/cascade/src/WordColumn.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useDrop } from 'react-dnd';\nimport WordCard from './WordCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WordColumn = _ref => {\n  _s();\n  let {\n    words,\n    onDrop\n  } = _ref;\n  const [{\n    isOver\n  }, drop] = useDrop(() => ({\n    accept: 'WORD',\n    drop: onDrop,\n    collect: monitor => ({\n      isOver: monitor.isOver()\n    })\n  }));\n  const style = {\n    border: '1px solid black',\n    minHeight: '100px',\n    minWidth: '200px',\n    padding: '10px'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: drop,\n    style: style,\n    children: words.map((word, index) => /*#__PURE__*/_jsxDEV(WordCard, {\n      word: word\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(WordColumn, \"9166pYLrZ/JzF75YDim8ZjfICTM=\", false, function () {\n  return [useDrop];\n});\n_c = WordColumn;\nexport default WordColumn;\nvar _c;\n$RefreshReg$(_c, \"WordColumn\");","map":{"version":3,"names":["React","useDrop","WordCard","jsxDEV","_jsxDEV","WordColumn","_ref","_s","words","onDrop","isOver","drop","accept","collect","monitor","style","border","minHeight","minWidth","padding","ref","children","map","word","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/bran/Documents/cascade/src/WordColumn.js"],"sourcesContent":["import React from 'react';\nimport { useDrop } from 'react-dnd';\nimport WordCard from './WordCard';\n\nconst WordColumn = ({ words, onDrop }) => {\n  const [{ isOver }, drop] = useDrop(() => ({\n    accept: 'WORD',\n    drop: onDrop,\n    collect: (monitor) => ({\n      isOver: monitor.isOver(),\n    }),\n  }));\n\n  const style = {\n    border: '1px solid black',\n    minHeight: '100px',\n    minWidth: '200px',\n    padding: '10px',\n  };\n\n  return (\n    <div ref={drop} style={style}>\n      {words.map((word, index) => (\n        <WordCard key={index} word={word} />\n      ))}\n    </div>\n  );\n};\n\nexport default WordColumn;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,WAAW;AACnC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,UAAU,GAAGC,IAAA,IAAuB;EAAAC,EAAA;EAAA,IAAtB;IAAEC,KAAK;IAAEC;EAAO,CAAC,GAAAH,IAAA;EACnC,MAAM,CAAC;IAAEI;EAAO,CAAC,EAAEC,IAAI,CAAC,GAAGV,OAAO,CAAC,OAAO;IACxCW,MAAM,EAAE,MAAM;IACdD,IAAI,EAAEF,MAAM;IACZI,OAAO,EAAGC,OAAO,KAAM;MACrBJ,MAAM,EAAEI,OAAO,CAACJ,MAAM;IACxB,CAAC;EACH,CAAC,CAAC,CAAC;EAEH,MAAMK,KAAK,GAAG;IACZC,MAAM,EAAE,iBAAiB;IACzBC,SAAS,EAAE,OAAO;IAClBC,QAAQ,EAAE,OAAO;IACjBC,OAAO,EAAE;EACX,CAAC;EAED,oBACEf,OAAA;IAAKgB,GAAG,EAAET,IAAK;IAACI,KAAK,EAAEA,KAAM;IAAAM,QAAA,EAC1Bb,KAAK,CAACc,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrBpB,OAAA,CAACF,QAAQ;MAAaqB,IAAI,EAAEA;IAAK,GAAlBC,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACrB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV,CAAC;AAACrB,EAAA,CAvBIF,UAAU;EAAA,QACaJ,OAAO;AAAA;AAAA4B,EAAA,GAD9BxB,UAAU;AAyBhB,eAAeA,UAAU;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}