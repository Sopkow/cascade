{"ast":null,"code":"var _jsxFileName = \"/home/bran/Documents/cascade/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport WordColumn from './WordColumn';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst words = [{\n  english: 'forest',\n  french: 'forêt'\n}, {\n  english: 'sibling',\n  french: 'frère et sœur'\n}, {\n  english: 'cereal',\n  french: 'céréale'\n}, {\n  english: 'desk',\n  french: 'bureau'\n}, {\n  english: 'camel',\n  french: 'chameau'\n}, {\n  english: 'butter',\n  french: 'beurre'\n}, {\n  english: 'bicycle',\n  french: 'vélo'\n}, {\n  english: 'railroad',\n  french: 'chemin de fer'\n}, {\n  english: 'folder',\n  french: 'dossier'\n}, {\n  english: 'weekly',\n  french: 'hebdomadaire'\n}, {\n  english: 'hungry',\n  french: 'faim'\n}, {\n  english: 'limestone',\n  french: 'calcaire'\n}];\nfunction App() {\n  _s();\n  const [selectedWord, setSelectedWord] = useState(null);\n  const [connections, setConnections] = useState([]);\n  const [buttonText, setButtonText] = useState('GO');\n  const [grade, setGrade] = useState(null);\n  const handleWordClick = (word, language) => {\n    if (selectedWord && selectedWord.language !== language) {\n      if (selectedWord.language === 'english') {\n        setConnections([...connections, {\n          englishWord: selectedWord.word,\n          frenchWord: word\n        }]);\n      } else {\n        setConnections([...connections, {\n          englishWord: word,\n          frenchWord: selectedWord.word\n        }]);\n      }\n      setSelectedWord(null);\n    } else {\n      setSelectedWord({\n        word,\n        language\n      });\n    }\n  };\n  const handleButtonClick = () => {\n    if (buttonText === 'GO') {\n      setButtonText('GRADE');\n      setGrade(null);\n    } else {\n      const correct = connections.filter(c => words.find(w => w.english === c.englishWord).french === c.frenchWord).length;\n      const percentage = correct / words.length * 100;\n      setGrade(percentage);\n      setButtonText('GO');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleButtonClick,\n      children: buttonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), grade !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Percentage Correct: \", grade.toFixed(2), \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-around'\n      },\n      children: [/*#__PURE__*/_jsxDEV(WordColumn, {\n        words: words.map(w => w.english),\n        onClick: handleWordClick,\n        selectedWord: selectedWord,\n        language: \"english\",\n        connections: connections\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WordColumn, {\n        words: words.map(w => w.french).sort(() => Math.random() - 0.5),\n        onClick: handleWordClick,\n        selectedWord: selectedWord,\n        language: \"french\",\n        connections: connections\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7YtoNZkm2QnT+CABy9C5fs7+ukc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","WordColumn","jsxDEV","_jsxDEV","words","english","french","App","_s","selectedWord","setSelectedWord","connections","setConnections","buttonText","setButtonText","grade","setGrade","handleWordClick","word","language","englishWord","frenchWord","handleButtonClick","correct","filter","c","find","w","length","percentage","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","style","display","justifyContent","map","sort","Math","random","_c","$RefreshReg$"],"sources":["/home/bran/Documents/cascade/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport WordColumn from './WordColumn';\n\nconst words = [\n  { english: 'forest', french: 'forêt' },\n  { english: 'sibling', french: 'frère et sœur' },\n  { english: 'cereal', french: 'céréale' },\n  { english: 'desk', french: 'bureau' },\n  { english: 'camel', french: 'chameau' },\n  { english: 'butter', french: 'beurre' },\n  { english: 'bicycle', french: 'vélo' },\n  { english: 'railroad', french: 'chemin de fer' },\n  { english: 'folder', french: 'dossier' },\n  { english: 'weekly', french: 'hebdomadaire' },\n  { english: 'hungry', french: 'faim' },\n  { english: 'limestone', french: 'calcaire' },\n];\n\nfunction App() {\n  const [selectedWord, setSelectedWord] = useState(null);\n  const [connections, setConnections] = useState([]);\n  const [buttonText, setButtonText] = useState('GO');\n  const [grade, setGrade] = useState(null);\n\n  const handleWordClick = (word, language) => {\n    if (selectedWord && selectedWord.language !== language) {\n      if (selectedWord.language === 'english') {\n        setConnections([...connections, { englishWord: selectedWord.word, frenchWord: word }]);\n      } else {\n        setConnections([...connections, { englishWord: word, frenchWord: selectedWord.word }]);\n      }\n      setSelectedWord(null);\n    } else {\n      setSelectedWord({ word, language });\n    }\n  };\n\n  const handleButtonClick = () => {\n    if (buttonText === 'GO') {\n      setButtonText('GRADE');\n      setGrade(null);\n    } else {\n      const correct = connections.filter(\n        (c) => words.find((w) => w.english === c.englishWord).french === c.frenchWord\n      ).length;\n      const percentage = (correct / words.length) * 100;\n      setGrade(percentage);\n      setButtonText('GO');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <button onClick={handleButtonClick}>{buttonText}</button>\n      {grade !== null && <p>Percentage Correct: {grade.toFixed(2)}%</p>}\n      <div style={{ display: 'flex', justifyContent: 'space-around' }}>\n        <WordColumn\n          words={words.map((w) => w.english)}\n          onClick={handleWordClick}\n          selectedWord={selectedWord}\n          language=\"english\"\n          connections={connections}\n        />\n        <WordColumn\n          words={words.map((w) => w.french).sort(() => Math.random() - 0.5)}\n          onClick={handleWordClick}\n          selectedWord={selectedWord}\n          language=\"french\"\n          connections={connections}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,KAAK,GAAG,CACZ;EAAEC,OAAO,EAAE,QAAQ;EAAEC,MAAM,EAAE;AAAQ,CAAC,EACtC;EAAED,OAAO,EAAE,SAAS;EAAEC,MAAM,EAAE;AAAgB,CAAC,EAC/C;EAAED,OAAO,EAAE,QAAQ;EAAEC,MAAM,EAAE;AAAU,CAAC,EACxC;EAAED,OAAO,EAAE,MAAM;EAAEC,MAAM,EAAE;AAAS,CAAC,EACrC;EAAED,OAAO,EAAE,OAAO;EAAEC,MAAM,EAAE;AAAU,CAAC,EACvC;EAAED,OAAO,EAAE,QAAQ;EAAEC,MAAM,EAAE;AAAS,CAAC,EACvC;EAAED,OAAO,EAAE,SAAS;EAAEC,MAAM,EAAE;AAAO,CAAC,EACtC;EAAED,OAAO,EAAE,UAAU;EAAEC,MAAM,EAAE;AAAgB,CAAC,EAChD;EAAED,OAAO,EAAE,QAAQ;EAAEC,MAAM,EAAE;AAAU,CAAC,EACxC;EAAED,OAAO,EAAE,QAAQ;EAAEC,MAAM,EAAE;AAAe,CAAC,EAC7C;EAAED,OAAO,EAAE,QAAQ;EAAEC,MAAM,EAAE;AAAO,CAAC,EACrC;EAAED,OAAO,EAAE,WAAW;EAAEC,MAAM,EAAE;AAAW,CAAC,CAC7C;AAED,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMiB,eAAe,GAAGA,CAACC,IAAI,EAAEC,QAAQ,KAAK;IAC1C,IAAIV,YAAY,IAAIA,YAAY,CAACU,QAAQ,KAAKA,QAAQ,EAAE;MACtD,IAAIV,YAAY,CAACU,QAAQ,KAAK,SAAS,EAAE;QACvCP,cAAc,CAAC,CAAC,GAAGD,WAAW,EAAE;UAAES,WAAW,EAAEX,YAAY,CAACS,IAAI;UAAEG,UAAU,EAAEH;QAAK,CAAC,CAAC,CAAC;MACxF,CAAC,MAAM;QACLN,cAAc,CAAC,CAAC,GAAGD,WAAW,EAAE;UAAES,WAAW,EAAEF,IAAI;UAAEG,UAAU,EAAEZ,YAAY,CAACS;QAAK,CAAC,CAAC,CAAC;MACxF;MACAR,eAAe,CAAC,IAAI,CAAC;IACvB,CAAC,MAAM;MACLA,eAAe,CAAC;QAAEQ,IAAI;QAAEC;MAAS,CAAC,CAAC;IACrC;EACF,CAAC;EAED,MAAMG,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIT,UAAU,KAAK,IAAI,EAAE;MACvBC,aAAa,CAAC,OAAO,CAAC;MACtBE,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,MAAM;MACL,MAAMO,OAAO,GAAGZ,WAAW,CAACa,MAAM,CAC/BC,CAAC,IAAKrB,KAAK,CAACsB,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACtB,OAAO,KAAKoB,CAAC,CAACL,WAAW,CAAC,CAACd,MAAM,KAAKmB,CAAC,CAACJ,UAAU,CAC9E,CAACO,MAAM;MACR,MAAMC,UAAU,GAAIN,OAAO,GAAGnB,KAAK,CAACwB,MAAM,GAAI,GAAG;MACjDZ,QAAQ,CAACa,UAAU,CAAC;MACpBf,aAAa,CAAC,IAAI,CAAC;IACrB;EACF,CAAC;EAED,oBACEX,OAAA;IAAK2B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB5B,OAAA;MAAQ6B,OAAO,EAAEV,iBAAkB;MAAAS,QAAA,EAAElB;IAAU;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAU,EACxDrB,KAAK,KAAK,IAAI,iBAAIZ,OAAA;MAAA4B,QAAA,GAAG,sBAAoB,EAAChB,KAAK,CAACsB,OAAO,CAAC,CAAC,CAAC,EAAC,GAAC;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,eACjEjC,OAAA;MAAKmC,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE;MAAe,CAAE;MAAAT,QAAA,gBAC9D5B,OAAA,CAACF,UAAU;QACTG,KAAK,EAAEA,KAAK,CAACqC,GAAG,CAAEd,CAAC,IAAKA,CAAC,CAACtB,OAAO,CAAE;QACnC2B,OAAO,EAAEf,eAAgB;QACzBR,YAAY,EAAEA,YAAa;QAC3BU,QAAQ,EAAC,SAAS;QAClBR,WAAW,EAAEA;MAAY;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACzB,eACFjC,OAAA,CAACF,UAAU;QACTG,KAAK,EAAEA,KAAK,CAACqC,GAAG,CAAEd,CAAC,IAAKA,CAAC,CAACrB,MAAM,CAAC,CAACoC,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,EAAE,GAAG,GAAG,CAAE;QAClEZ,OAAO,EAAEf,eAAgB;QACzBR,YAAY,EAAEA,YAAa;QAC3BU,QAAQ,EAAC,QAAQ;QACjBR,WAAW,EAAEA;MAAY;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACzB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV;AAAC5B,EAAA,CAvDQD,GAAG;AAAAsC,EAAA,GAAHtC,GAAG;AAyDZ,eAAeA,GAAG;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}