{"ast":null,"code":"var _jsxFileName = \"/home/bran/Documents/cascade/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport WordColumn from './WordColumn';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [words, setWords] = useState({\n    'forest': 'forêt',\n    'sibling': 'frère et sœur',\n    'cereal': 'céréale',\n    'desk': 'bureau',\n    'camel': 'chameau',\n    'butter': 'beurre',\n    'bicycle': 'vélo',\n    'railroad': 'chemin de fer',\n    'folder': 'dossier',\n    'weekly': 'hebdomadaire',\n    'hungry': 'faim',\n    'limestone': 'calcaire'\n  });\n  const [englishWords, setEnglishWords] = useState([]);\n  const [frenchWords, setFrenchWords] = useState([]);\n  const [selectedWord, setSelectedWord] = useState(null);\n  const handleStart = () => {\n    const englishWords = Object.keys(words);\n    const shuffledEnglishWords = shuffleArray(englishWords);\n    setEnglishWords(shuffledEnglishWords);\n    const frenchWords = shuffledEnglishWords.map(englishWord => words[englishWord]);\n    setFrenchWords(frenchWords);\n    setSelectedWord(null);\n  };\n  const shuffleArray = array => {\n    const shuffledArray = [...array];\n    for (let i = shuffledArray.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];\n    }\n    return shuffledArray;\n  };\n  const handleWordSelect = englishWord => {\n    if (selectedWord === null) {\n      setSelectedWord(englishWord);\n    } else if (selectedWord === englishWord) {\n      setSelectedWord(null);\n    } else {\n      setSelectedWord(null);\n    }\n  };\n  const calculateScore = () => {\n    let correct = 0;\n    for (let i = 0; i < englishWords.length; i++) {\n      if (words[englishWords[i]] === frenchWords[i]) {\n        correct++;\n      }\n    }\n    return correct / englishWords.length * 100;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: englishWords.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to Memory Game!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStart,\n        children: \"GO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Match the English words to the French words\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"columns\",\n        children: [/*#__PURE__*/_jsxDEV(WordColumn, {\n          words: englishWords,\n          handleWordSelect: handleWordSelect,\n          selectedWord: selectedWord\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(WordColumn, {\n          words: frenchWords,\n          handleWordSelect: handleWordSelect,\n          selectedWord: selectedWord\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleStart,\n          children: \"GO!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleStart,\n          children: \"GRADE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), selectedWord !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"arrow-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"arrow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), selectedWord === null && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Click an English word to select it\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), selectedWord !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Click a French word to match it with the selected English word: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: selectedWord\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 82\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"x5FE71B42ZDXPX/cpbqqAcAecGo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","WordColumn","jsxDEV","_jsxDEV","App","_s","words","setWords","englishWords","setEnglishWords","frenchWords","setFrenchWords","selectedWord","setSelectedWord","handleStart","Object","keys","shuffledEnglishWords","shuffleArray","map","englishWord","array","shuffledArray","i","length","j","Math","floor","random","handleWordSelect","calculateScore","correct","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/bran/Documents/cascade/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport WordColumn from './WordColumn';\n\nfunction App() {\n  const [words, setWords] = useState({\n    'forest': 'forêt',\n    'sibling': 'frère et sœur',\n    'cereal': 'céréale',\n    'desk': 'bureau',\n    'camel': 'chameau',\n    'butter': 'beurre',\n    'bicycle': 'vélo',\n    'railroad': 'chemin de fer',\n    'folder': 'dossier',\n    'weekly': 'hebdomadaire',\n    'hungry': 'faim',\n    'limestone': 'calcaire'\n  });\n  const [englishWords, setEnglishWords] = useState([]);\n  const [frenchWords, setFrenchWords] = useState([]);\n  const [selectedWord, setSelectedWord] = useState(null);\n\n  const handleStart = () => {\n    const englishWords = Object.keys(words);\n    const shuffledEnglishWords = shuffleArray(englishWords);\n    setEnglishWords(shuffledEnglishWords);\n    const frenchWords = shuffledEnglishWords.map(englishWord => words[englishWord]);\n    setFrenchWords(frenchWords);\n    setSelectedWord(null);\n  };\n\n  const shuffleArray = (array) => {\n    const shuffledArray = [...array];\n    for (let i = shuffledArray.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];\n    }\n    return shuffledArray;\n  };\n\n  const handleWordSelect = (englishWord) => {\n    if (selectedWord === null) {\n      setSelectedWord(englishWord);\n    } else if (selectedWord === englishWord) {\n      setSelectedWord(null);\n    } else {\n      setSelectedWord(null);\n    }\n  };\n\n  const calculateScore = () => {\n    let correct = 0;\n    for (let i = 0; i < englishWords.length; i++) {\n      if (words[englishWords[i]] === frenchWords[i]) {\n        correct++;\n      }\n    }\n    return (correct / englishWords.length) * 100;\n  };\n\n  return (\n    <div className=\"App\">\n      {englishWords.length === 0 ? (\n        <div>\n          <h1>Welcome to Memory Game!</h1>\n          <button onClick={handleStart}>GO</button>\n        </div>\n      ) : (\n        <div>\n          <h1>Match the English words to the French words</h1>\n          <div className=\"columns\">\n            <WordColumn words={englishWords} handleWordSelect={handleWordSelect} selectedWord={selectedWord} />\n            <WordColumn words={frenchWords} handleWordSelect={handleWordSelect} selectedWord={selectedWord} />\n          </div>\n          <div>\n            <button onClick={handleStart}>GO!</button>\n            <button onClick={handleStart}>GRADE</button>\n            {selectedWord !== null && (\n              <div className=\"arrow-container\">\n                <div className=\"arrow\" />\n              </div>\n            )}\n          </div>\n          {selectedWord === null && (\n            <div>\n              <p>Click an English word to select it</p>\n            </div>\n          )}\n          {selectedWord !== null && (\n            <div>\n              <p>Click a French word to match it with the selected English word: <strong>{selectedWord}</strong></p>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}