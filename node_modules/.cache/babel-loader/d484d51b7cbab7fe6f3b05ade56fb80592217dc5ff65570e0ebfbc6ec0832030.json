{"ast":null,"code":"var _jsxFileName = \"/home/bran/Documents/cascade/src/WordColumn.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useDrop } from 'react-dnd';\nimport WordCard from './WordCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WordColumn = _ref => {\n  _s();\n  let {\n    words,\n    onDrop,\n    emptySlots,\n    onDragEnd\n  } = _ref;\n  const [{\n    canDrop,\n    isOver\n  }, drop] = useDrop(() => ({\n    accept: 'WORD',\n    drop: (item, monitor) => onDrop && onDrop(item),\n    collect: monitor => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop()\n    })\n  }));\n  const isActive = canDrop && isOver;\n  const backgroundColor = isActive ? 'lightgreen' : 'pink';\n  const style = {\n    border: '1px solid black',\n    minHeight: '100px',\n    minWidth: '200px',\n    padding: '10px',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start'\n  };\n  const slotStyle = {\n    border: '1px dashed gray',\n    minHeight: '20px',\n    minWidth: '200px',\n    margin: '5px'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: style,\n    children: words.map((word, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: [!emptySlots && /*#__PURE__*/_jsxDEV(WordCard, {\n        word: word,\n        isFrench: !emptySlots,\n        onDragEnd: onDragEnd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 27\n      }, this), emptySlots && /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: drop,\n        style: slotStyle,\n        onDragOver: e => e.preventDefault()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(WordColumn, \"F504N0wuFSbvI1XEbEwXUidFCiM=\", false, function () {\n  return [useDrop];\n});\n_c = WordColumn;\nexport default WordColumn;\nvar _c;\n$RefreshReg$(_c, \"WordColumn\");","map":{"version":3,"names":["React","useDrop","WordCard","jsxDEV","_jsxDEV","WordColumn","_ref","_s","words","onDrop","emptySlots","onDragEnd","canDrop","isOver","drop","accept","item","monitor","collect","isActive","backgroundColor","style","border","minHeight","minWidth","padding","display","flexDirection","alignItems","slotStyle","margin","children","map","word","index","isFrench","fileName","_jsxFileName","lineNumber","columnNumber","ref","onDragOver","e","preventDefault","_c","$RefreshReg$"],"sources":["/home/bran/Documents/cascade/src/WordColumn.js"],"sourcesContent":["import React from 'react';\nimport { useDrop } from 'react-dnd';\nimport WordCard from './WordCard';\n\nconst WordColumn = ({ words, onDrop, emptySlots, onDragEnd }) => {\n    const [{ canDrop, isOver }, drop] = useDrop(() => ({\n        accept: 'WORD',\n        drop: (item, monitor) => onDrop && onDrop(item),\n        collect: (monitor) => ({\n          isOver: monitor.isOver(),\n          canDrop: monitor.canDrop(),\n        }),\n      }));\n      \n      \n\n    const isActive = canDrop && isOver;\n    const backgroundColor = isActive ? 'lightgreen' : 'pink'\n  \n    const style = {\n    border: '1px solid black',\n    minHeight: '100px',\n    minWidth: '200px',\n    padding: '10px',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n  };\n\n  const slotStyle = {\n    border: '1px dashed gray',\n    minHeight: '20px',\n    minWidth: '200px',\n    margin: '5px',\n  };\n\n  return (\n    <div style={style}>\n      {words.map((word, index) => (\n        <div key={index} style={{ display: 'flex' }}>\n          {!emptySlots && <WordCard word={word} isFrench={!emptySlots} onDragEnd={onDragEnd} />}\n          {emptySlots && (\n            <div\n              ref={drop}\n              style={slotStyle}\n              onDragOver={(e) => e.preventDefault()}\n            />\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default WordColumn;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,WAAW;AACnC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,UAAU,GAAGC,IAAA,IAA8C;EAAAC,EAAA;EAAA,IAA7C;IAAEC,KAAK;IAAEC,MAAM;IAAEC,UAAU;IAAEC;EAAU,CAAC,GAAAL,IAAA;EACxD,MAAM,CAAC;IAAEM,OAAO;IAAEC;EAAO,CAAC,EAAEC,IAAI,CAAC,GAAGb,OAAO,CAAC,OAAO;IAC/Cc,MAAM,EAAE,MAAM;IACdD,IAAI,EAAEA,CAACE,IAAI,EAAEC,OAAO,KAAKR,MAAM,IAAIA,MAAM,CAACO,IAAI,CAAC;IAC/CE,OAAO,EAAGD,OAAO,KAAM;MACrBJ,MAAM,EAAEI,OAAO,CAACJ,MAAM,EAAE;MACxBD,OAAO,EAAEK,OAAO,CAACL,OAAO;IAC1B,CAAC;EACH,CAAC,CAAC,CAAC;EAIL,MAAMO,QAAQ,GAAGP,OAAO,IAAIC,MAAM;EAClC,MAAMO,eAAe,GAAGD,QAAQ,GAAG,YAAY,GAAG,MAAM;EAExD,MAAME,KAAK,GAAG;IACdC,MAAM,EAAE,iBAAiB;IACzBC,SAAS,EAAE,OAAO;IAClBC,QAAQ,EAAE,OAAO;IACjBC,OAAO,EAAE,MAAM;IACfC,OAAO,EAAE,MAAM;IACfC,aAAa,EAAE,QAAQ;IACvBC,UAAU,EAAE;EACd,CAAC;EAED,MAAMC,SAAS,GAAG;IAChBP,MAAM,EAAE,iBAAiB;IACzBC,SAAS,EAAE,MAAM;IACjBC,QAAQ,EAAE,OAAO;IACjBM,MAAM,EAAE;EACV,CAAC;EAED,oBACE1B,OAAA;IAAKiB,KAAK,EAAEA,KAAM;IAAAU,QAAA,EACfvB,KAAK,CAACwB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrB9B,OAAA;MAAiBiB,KAAK,EAAE;QAAEK,OAAO,EAAE;MAAO,CAAE;MAAAK,QAAA,GACzC,CAACrB,UAAU,iBAAIN,OAAA,CAACF,QAAQ;QAAC+B,IAAI,EAAEA,IAAK;QAACE,QAAQ,EAAE,CAACzB,UAAW;QAACC,SAAS,EAAEA;MAAU;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,EACpF7B,UAAU,iBACTN,OAAA;QACEoC,GAAG,EAAE1B,IAAK;QACVO,KAAK,EAAEQ,SAAU;QACjBY,UAAU,EAAGC,CAAC,IAAKA,CAAC,CAACC,cAAc;MAAG;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAEzC;IAAA,GAROL,KAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAUhB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV,CAAC;AAAChC,EAAA,CAhDIF,UAAU;EAAA,QACwBJ,OAAO;AAAA;AAAA2C,EAAA,GADzCvC,UAAU;AAkDhB,eAAeA,UAAU;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}