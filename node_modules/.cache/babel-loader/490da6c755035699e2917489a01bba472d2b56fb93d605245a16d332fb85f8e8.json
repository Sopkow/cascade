{"ast":null,"code":"var _jsxFileName = \"/home/bran/Documents/cascade/src/WordColumn.js\";\nimport React from 'react';\nimport WordCard from './WordCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WordColumn = _ref => {\n  let {\n    words,\n    onClick,\n    selectedWord,\n    language,\n    connections,\n    pairedWords\n  } = _ref;\n  const style = {\n    border: '1px solid black',\n    minHeight: '100px',\n    minWidth: '200px',\n    padding: '10px',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    position: 'relative'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: style,\n    children: words.map((word, index) => {\n      const isPaired = pairedWords.some(pair => pair[language + \"Word\"] && pair[language + \"Word\"].word && pair[language + \"Word\"].word.index === index && pair.color === 'yellow');\n      return /*#__PURE__*/_jsxDEV(WordCard, {\n        word: {\n          text: word,\n          index\n        },\n        onClick: onClick,\n        isSelected: selectedWord && selectedWord.word && selectedWord.language === language && selectedWord.word.index === index ? selectedWord.color : pairedWords.some(pair => pair[language + \"Word\"] && pair[language + \"Word\"].word.index === index && pair[language + \"Word\"].language === language) ? selectedWord.color === \"cyan\" && selectedWord.word.index === index && selectedWord.language === language ? \"cyan\" : \"yellow\" : null,\n        language: language\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = WordColumn;\nexport default WordColumn;\nvar _c;\n$RefreshReg$(_c, \"WordColumn\");","map":{"version":3,"names":["React","WordCard","jsxDEV","_jsxDEV","WordColumn","_ref","words","onClick","selectedWord","language","connections","pairedWords","style","border","minHeight","minWidth","padding","display","flexDirection","alignItems","position","children","map","word","index","isPaired","some","pair","color","text","isSelected","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/bran/Documents/cascade/src/WordColumn.js"],"sourcesContent":["import React from 'react';\nimport WordCard from './WordCard';\n\nconst WordColumn = ({ words, onClick, selectedWord, language, connections, pairedWords }) => {\n    \n  const style = {\n    border: '1px solid black',\n    minHeight: '100px',\n    minWidth: '200px',\n    padding: '10px',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    position: 'relative',\n  };\n\n  return (\n    <div style={style}>\n      {words.map((word, index) => {\n        const isPaired = pairedWords.some(\n          (pair) =>\n            pair[language + \"Word\"] &&\n            pair[language + \"Word\"].word &&\n            pair[language + \"Word\"].word.index === index &&\n            pair.color === 'yellow'\n        );\n\n        return (\n          <WordCard\n            key={index}\n            word={{ text: word, index }}\n            onClick={onClick}\n            isSelected={\n              (selectedWord && selectedWord.word && selectedWord.language === language && selectedWord.word.index === index)\n                ? selectedWord.color\n                : (\n                    pairedWords.some(pair => (\n                      pair[language + \"Word\"] && pair[language + \"Word\"].word.index === index && pair[language + \"Word\"].language === language\n                    ))\n                    ? (selectedWord.color === \"cyan\" && selectedWord.word.index === index && selectedWord.language === language ? \"cyan\" : \"yellow\")\n                    : null\n                  )\n            }\n            language={language}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default WordColumn;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,UAAU,GAAGC,IAAA,IAA0E;EAAA,IAAzE;IAAEC,KAAK;IAAEC,OAAO;IAAEC,YAAY;IAAEC,QAAQ;IAAEC,WAAW;IAAEC;EAAY,CAAC,GAAAN,IAAA;EAEtF,MAAMO,KAAK,GAAG;IACZC,MAAM,EAAE,iBAAiB;IACzBC,SAAS,EAAE,OAAO;IAClBC,QAAQ,EAAE,OAAO;IACjBC,OAAO,EAAE,MAAM;IACfC,OAAO,EAAE,MAAM;IACfC,aAAa,EAAE,QAAQ;IACvBC,UAAU,EAAE,YAAY;IACxBC,QAAQ,EAAE;EACZ,CAAC;EAED,oBACEjB,OAAA;IAAKS,KAAK,EAAEA,KAAM;IAAAS,QAAA,EACff,KAAK,CAACgB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MAC1B,MAAMC,QAAQ,GAAGd,WAAW,CAACe,IAAI,CAC9BC,IAAI,IACHA,IAAI,CAAClB,QAAQ,GAAG,MAAM,CAAC,IACvBkB,IAAI,CAAClB,QAAQ,GAAG,MAAM,CAAC,CAACc,IAAI,IAC5BI,IAAI,CAAClB,QAAQ,GAAG,MAAM,CAAC,CAACc,IAAI,CAACC,KAAK,KAAKA,KAAK,IAC5CG,IAAI,CAACC,KAAK,KAAK,QAAQ,CAC1B;MAED,oBACEzB,OAAA,CAACF,QAAQ;QAEPsB,IAAI,EAAE;UAAEM,IAAI,EAAEN,IAAI;UAAEC;QAAM,CAAE;QAC5BjB,OAAO,EAAEA,OAAQ;QACjBuB,UAAU,EACPtB,YAAY,IAAIA,YAAY,CAACe,IAAI,IAAIf,YAAY,CAACC,QAAQ,KAAKA,QAAQ,IAAID,YAAY,CAACe,IAAI,CAACC,KAAK,KAAKA,KAAK,GACzGhB,YAAY,CAACoB,KAAK,GAEhBjB,WAAW,CAACe,IAAI,CAACC,IAAI,IACnBA,IAAI,CAAClB,QAAQ,GAAG,MAAM,CAAC,IAAIkB,IAAI,CAAClB,QAAQ,GAAG,MAAM,CAAC,CAACc,IAAI,CAACC,KAAK,KAAKA,KAAK,IAAIG,IAAI,CAAClB,QAAQ,GAAG,MAAM,CAAC,CAACA,QAAQ,KAAKA,QACjH,CAAC,GACCD,YAAY,CAACoB,KAAK,KAAK,MAAM,IAAIpB,YAAY,CAACe,IAAI,CAACC,KAAK,KAAKA,KAAK,IAAIhB,YAAY,CAACC,QAAQ,KAAKA,QAAQ,GAAG,MAAM,GAAG,QAAQ,GAC7H,IAET;QACDA,QAAQ,EAAEA;MAAS,GAdde,KAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAeV;IAEN,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV,CAAC;AAACC,EAAA,GA9CI/B,UAAU;AAgDhB,eAAeA,UAAU;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}