{"ast":null,"code":"var _jsxFileName = \"/home/bran/Documents/cascade/src/WordCard.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WordCard = _ref => {\n  _s();\n  let {\n    word,\n    language,\n    onClick,\n    pairedWords,\n    isSelected\n  } = _ref;\n  const wordRef = useRef(null);\n  const [color, setColor] = useState('white');\n  useEffect(() => {\n    setColor(pairedWords.some(pair => pair[language + \"Word\"].word.index === word.index && pair.color === 'yellow') ? 'yellow' : 'white');\n  }, [pairedWords]);\n  const style = {\n    border: '1px solid black',\n    padding: '5px',\n    margin: '5px',\n    zIndex: '10',\n    backgroundColor: color\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: () => onClick(word, language, wordRef),\n    style: style,\n    ref: wordRef,\n    children: word.text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(WordCard, \"p3PVEwEJirnOwtCdHHZi0krAO+Q=\");\n_c = WordCard;\nexport default WordCard;\nvar _c;\n$RefreshReg$(_c, \"WordCard\");","map":{"version":3,"names":["React","useRef","useState","useEffect","jsxDEV","_jsxDEV","WordCard","_ref","_s","word","language","onClick","pairedWords","isSelected","wordRef","color","setColor","some","pair","index","style","border","padding","margin","zIndex","backgroundColor","ref","children","text","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/bran/Documents/cascade/src/WordCard.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\n\nconst WordCard = ({ word, language, onClick, pairedWords, isSelected }) => {\n    const wordRef = useRef(null);\n    const [color, setColor] = useState('white');\n\n    useEffect(() => {\n        setColor(pairedWords.some(pair => pair[language + \"Word\"].word.index === word.index && pair.color === 'yellow') ? 'yellow' : 'white');\n    }, [pairedWords]);\n\n    const style = {\n        border: '1px solid black',\n        padding: '5px',\n        margin: '5px',\n        zIndex: '10',\n        backgroundColor: color,\n    };\n\n    return (\n        <div\n        onClick={() => onClick(word, language, wordRef)}\n        style={style}\n        ref={wordRef}\n        >\n        {word.text}\n        </div>\n    );\n};\n\nexport default WordCard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,QAAQ,GAAGC,IAAA,IAA0D;EAAAC,EAAA;EAAA,IAAzD;IAAEC,IAAI;IAAEC,QAAQ;IAAEC,OAAO;IAAEC,WAAW;IAAEC;EAAW,CAAC,GAAAN,IAAA;EAClE,MAAMO,OAAO,GAAGb,MAAM,CAAC,IAAI,CAAC;EAC5B,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,OAAO,CAAC;EAE3CC,SAAS,CAAC,MAAM;IACZa,QAAQ,CAACJ,WAAW,CAACK,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACR,QAAQ,GAAG,MAAM,CAAC,CAACD,IAAI,CAACU,KAAK,KAAKV,IAAI,CAACU,KAAK,IAAID,IAAI,CAACH,KAAK,KAAK,QAAQ,CAAC,GAAG,QAAQ,GAAG,OAAO,CAAC;EACzI,CAAC,EAAE,CAACH,WAAW,CAAC,CAAC;EAEjB,MAAMQ,KAAK,GAAG;IACVC,MAAM,EAAE,iBAAiB;IACzBC,OAAO,EAAE,KAAK;IACdC,MAAM,EAAE,KAAK;IACbC,MAAM,EAAE,IAAI;IACZC,eAAe,EAAEV;EACrB,CAAC;EAED,oBACIV,OAAA;IACAM,OAAO,EAAEA,CAAA,KAAMA,OAAO,CAACF,IAAI,EAAEC,QAAQ,EAAEI,OAAO,CAAE;IAChDM,KAAK,EAAEA,KAAM;IACbM,GAAG,EAAEZ,OAAQ;IAAAa,QAAA,EAEZlB,IAAI,CAACmB;EAAI;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEd,CAAC;AAACxB,EAAA,CAzBIF,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AA2Bd,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}